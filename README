=======================================
 django-piston (PBS Education Version)
=======================================
:Info: piston is a REST API framework for use with django projects
:Keywords: REST, API, django
:Original Documentation: https://bitbucket.org/jespern/django-piston/wiki/Home

Changes in PBS Education Version
================================

In order to implement best practices in API development, we have incorporated the following new features

.. Resource definition subsystem
.. Pluggable envelopes
.. Form error feedback

Example of API building
=======================

Here we demonstrate how to use the new features along with the existing ones

We'll start by selecting a few models

    from django.db import models
    
    class Author(models.Model):
        name = models.CharField(max_length=200)
        biography = models.CharField(required=False)
        url = models.URLField(verify_exists=False, required=False)
    
    
    class Book(models.Model):
        title = models.CharField(max_length=200)
        summary = models.CharField(max_length=2000, required=False)
        isbn10 = models.CharField(max_length=10)
        isbn13 = models.CharField(max_length=13)
        pages = models.IntegerField(required=False)
        authors = models.ManyToManyField(Author, related_name='books')
        time_created = models.DateTimeField(auto_now_add=True)
    
    
    class Publisher():
        name = models.CharField(max_length=200)
        url = models.URLField(verify_exists=False, required=False)
    
    
    class Edition(models.Model):
        book = models.ForeignKey(Book, related_name='editions')
        publisher = models.ForeignKey(Book, related_name='editions')
        number = models.IntegerField()
        date_published = models.DateTimeField()
